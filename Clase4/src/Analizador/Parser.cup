package Analizador;
import java_cup.runtime.*;


//PARSER 
parser code
{://Codigo visible
    
    /*public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }*/

:}


terminal String PTCOMA,PAR_IZQ,PAR_DER,COR_IZQ,COR_DER,LLAV_IZQ,LLAV_DER; // mismo nombre en el archivo lexico
terminal String IGUAL;
terminal String MAS,MENOS,POR,DIV;
terminal String ENTERO,DECIMAL,ID,CADENA,CARACTER;
terminal String UMENOS;                             // para la precedencia para los negativos y no en 
terminal String RVOID,RMAIN;
terminal String RINT,RDOUBLE,RCHAR,RSTRING,RBOOL;

non terminal inicio,principal;                                   // terminales para las transiciones 
non terminal instrucciones,instruccion;
non terminal declaracion,tipoDato;
non terminal expresion;




start with inicio;                                     // iniciar la gramataica 

inicio::=principal;                                // produccion inicial 
principal::=RVOID RMAIN PAR_IZQ PAR_DER LLAV_IZQ instrucciones  LLAV_DER
;

instrucciones::=instrucciones instruccion
|instruccion
;

instruccion::= declaracion PTCOMA
;


declaracion::=tipoDato ID IGUAL expresion {:System.out.println("Declaraci√≥n encontrada: ");:}
;

expresion::=ENTERO
|DECIMAL
;

tipoDato::=RINT
|RDOUBLE
|RCHAR
|RSTRING
|RBOOL
;

